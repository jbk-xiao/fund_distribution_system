<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myfunds.fds.mapper.satoken.XUserMapper">


	<!-- 增 -->
	<insert id="add">
		insert into
		`x_user`(`id`, `name`, `role_id`, `password`, `pw`, `create_time`)
		values (#{userId}, #{name}, #{roleId}, #{password}, #{pw}, now())
	</insert>

	<select id="getIdSet" resultType="java.lang.String">
		select `id` from `x_user`;
	</select>
	<!-- 删 -->
	<delete id="delete">
		delete from `x_user` where `id` = #{id}
	</delete>


	<!-- 改 -->
	<update id="update">
		update `x_user` set
		`name` = #{name},
		`password` = #{password},
		`pw` = #{pw}
		where `id` = #{userId}
	</update>
	<update id="updatePassword">
		update `x_user` set
		`password` = #{password},
		`pw` = #{pw}
		where `id` = #{userId}
	</update>
	<update id="updatePasswordAndMail">
		update `x_user` set
				`password` = #{password},
				`pw` = #{pw},
		        `mail` = #{mail}
		where `id` = #{userId}
	</update>
	<!-- 自己改自己 -->
	<!-- <delete id="updateBy">
		update `x_user` set
		`name` = #{name}
		where `id` = #{id}
	</delete> -->

	<!-- =================== 查询相关 =================== -->

	<!-- 通用映射 -->
	<resultMap id="model" type="com.myfunds.fds.entity.satoken.XUser">
		<result property="id" column="id" />
		<result property="name" column="name" />
		<result property="password" column="password" />
		<result property="pw" column="pw" />
		<result property="roleId" column="role_id" />
		<result property="status" column="status" />
		<result property="createTime" column="create_time" />
		<result property="loginTime" column="login_time" />
		<result property="loginIp" column="login_ip" />
		<result property="loginCount" column="login_count" />
		<result property="roleName" column="role_name" />
	</resultMap>
	
	<!-- 查询sql -->
	<sql id="select_sql">
		select `id`, `name`, `password`, `pw`, `role_id`, `status`,
		       `create_time`, `login_time`, `login_ip`, `login_count`,
		(select `name` from `x_role` where `id` = `x_user`.`role_id`) as `role_name`
		from `x_user`
	</sql>


	<!-- 查询，根据id -->
	<select id="getById" resultMap="model">
		<include refid="select_sql"></include>
		where `id` = #{id}
	</select>

	<!-- 查询，根据名称 -->
	<select id="getByName" resultMap="model">
		<include refid="select_sql"></include>
		where `name` = #{name}
	</select>

	<!-- 查询，根据名称 -->
	<select id="getByMail" resultMap="model">
		<include refid="select_sql"></include>
		where `mail` = #{mail}
	</select>


	<!-- 查询 -->
	<select id="getList" resultMap="model">
		<include refid="select_sql"></include>
		where 1=1
		<if test=' this.has("id")  '>and `id` = #{id} </if>
		<if test=' this.has("name")  '>and `name` like concat('%', #{name}, '%')  </if>
		<if test=' this.has("roleId")  '>and `role_id` = #{roleId} </if>
		order by 
		<choose>
			<when test='sort_type == 0'>`id` desc;</when>
			<when test='sort_type == 1'>`id` asc;</when>
			<when test='sort_type == 2'>`login_time` desc;</when>
			<when test='sort_type == 3'>`login_count` desc;</when>
		 	<otherwise>`id` desc;</otherwise>
		 </choose>
	</select>
	<select id="getAll" resultMap="model">
		<include refid="select_sql"></include>
	</select>
</mapper>
